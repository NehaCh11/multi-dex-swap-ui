import { ChainId as ChainIdEvm } from '@hashflow/sdk';
export declare type Environment = 'production' | 'staging' | 'development';
export declare type ApiMode = 'wallet' | 'taker';
export declare enum RFQType {
    RFQT = 0,
    RFQM = 1
}
export declare const SOLANA_MAINNET_CHAIN_ID = 1000001;
export declare const SOLANA_DEVNET_CHAIN_ID = 1000002;
export declare const SOLANA_CHAIN_IDS: readonly [1000001, 1000002];
declare type ChainIdSolana = (typeof SOLANA_CHAIN_IDS)[number];
export declare type ChainType = 'evm' | 'solana';
declare type ChainIdOf<CT extends ChainType> = CT extends 'evm' ? ChainIdEvm : CT extends 'solana' ? ChainIdSolana : never;
declare type ChainOf<CT extends ChainType> = {
    chainType: CT;
    chainId: ChainIdOf<CT>;
};
export declare type Chain = ChainOf<ChainType>;
export declare type ChainId = ChainIdOf<ChainType>;
export declare const CHAIN_IDS_BY_TYPE: Record<ChainType, ChainId[]>;
export declare type PriceLevel = {
    q: string;
    p: string;
};
export declare type QuoteData = {
    baseChain: Chain;
    quoteChain: Chain;
    baseToken: string;
    quoteToken: string;
    baseTokenAmount: string;
    quoteTokenAmount: string;
    trader: string;
    effectiveTrader: string;
    pool: string;
    dstPool: string;
    txid: string;
    nonce: number;
    quoteExpiry: number;
    externalAccount?: string;
};
export {};
