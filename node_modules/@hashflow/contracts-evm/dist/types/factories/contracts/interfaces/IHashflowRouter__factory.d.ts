import { type ContractRunner } from "ethers";
import type { IHashflowRouter, IHashflowRouterInterface } from "../../../contracts/interfaces/IHashflowRouter";
export declare class IHashflowRouter__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "guardian";
            readonly type: "address";
        }];
        readonly name: "UpdateLimitOrderGuardian";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "UpdatePoolAuthorizaton";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "otherHashflowChainId";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "caller";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "UpdateXChainCallerAuthorization";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "xChainMessenger";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "UpdateXChainMessengerAuthorization";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "callee";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "xChainMessenger";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "UpdateXChainMessengerCallerAuthorization";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "otherHashflowChainId";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "otherChainPool";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "UpdateXChainPoolAuthorization";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }];
        readonly name: "authorizedPools";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "dstContract";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "srcHashflowChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "caller";
            readonly type: "bytes32";
        }];
        readonly name: "authorizedXChainCallers";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "callee";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "messenger";
            readonly type: "address";
        }];
        readonly name: "authorizedXChainMessengersByCallee";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "messenger";
            readonly type: "address";
        }];
        readonly name: "authorizedXChainMessengersByPool";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "dstPool";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "srcHChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "srcPool";
            readonly type: "bytes32";
        }];
        readonly name: "authorizedXChainPools";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "factory";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "srcHashflowChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "srcPool";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "dstPool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "dstExternalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "dstTrader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "srcCaller";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "dstContract";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "dstContractCalldata";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IHashflowRouter.XChainFillMessage";
            readonly name: "fillMessage";
            readonly type: "tuple";
        }];
        readonly name: "fillXChain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }];
        readonly name: "forceUnauthorizePool";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "factory";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "enabled";
            readonly type: "bool";
        }];
        readonly name: "killswitchPool";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "pool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "externalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "takerSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "makerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.RFQMQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }];
        readonly name: "tradeRFQM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "pool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "externalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "takerSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "makerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.RFQMQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "guardianSignature";
            readonly type: "bytes";
        }];
        readonly name: "tradeRFQMLimitOrder";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "pool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "externalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "takerSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "makerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.RFQMQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "guardianSignature";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountToApprove";
            readonly type: "uint256";
        }];
        readonly name: "tradeRFQMLimitOrderWithPermit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "pool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "externalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "takerSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "makerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.RFQMQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountToApprove";
            readonly type: "uint256";
        }];
        readonly name: "tradeRFQMWithPermit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "pool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "externalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "effectiveTrader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "effectiveBaseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.RFQTQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }];
        readonly name: "tradeRFQT";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "pool";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "externalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "effectiveTrader";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "quoteToken";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "effectiveBaseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.RFQTQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountToApprove";
            readonly type: "uint256";
        }];
        readonly name: "tradeRFQTWithPermit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "srcChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "dstChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "srcPool";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstPool";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "srcExternalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstExternalAccount";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstTrader";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "quoteToken";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "xChainMessenger";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "takerSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "makerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.XChainRFQMQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "dstContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "dstCalldata";
            readonly type: "bytes";
        }];
        readonly name: "tradeXChainRFQM";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "srcChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "dstChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "srcPool";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstPool";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "srcExternalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstExternalAccount";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "trader";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstTrader";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "quoteToken";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "xChainMessenger";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "takerSignature";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "makerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.XChainRFQMQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "dstContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "dstCalldata";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountToApprove";
            readonly type: "uint256";
        }];
        readonly name: "tradeXChainRFQMWithPermit";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "srcChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "dstChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "srcPool";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstPool";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "srcExternalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstExternalAccount";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstTrader";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "quoteToken";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "effectiveBaseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "xChainMessenger";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.XChainRFQTQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "dstContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "dstCalldata";
            readonly type: "bytes";
        }];
        readonly name: "tradeXChainRFQT";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "srcChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "dstChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "srcPool";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstPool";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "srcExternalAccount";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstExternalAccount";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "dstTrader";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "quoteToken";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "effectiveBaseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "baseTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteTokenAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "quoteExpiry";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "txid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "xChainMessenger";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "signature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IQuote.XChainRFQTQuote";
            readonly name: "quote";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "dstContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "dstCalldata";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountToApprove";
            readonly type: "uint256";
        }];
        readonly name: "tradeXChainRFQTWithPermit";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "guardian";
            readonly type: "address";
        }];
        readonly name: "updateLimitOrderGuardian";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "pool";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "updatePoolAuthorization";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "otherHashflowChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "caller";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "updateXChainCallerAuthorization";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "xChainMessenger";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "updateXChainMessengerAuthorization";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "xChainMessenger";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "updateXChainMessengerCallerAuthorization";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "otherHashflowChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "otherPool";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bool";
            readonly name: "authorized";
            readonly type: "bool";
        }];
        readonly name: "updateXChainPoolAuthorization";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "withdrawFunds";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IHashflowRouterInterface;
    static connect(address: string, runner?: ContractRunner | null): IHashflowRouter;
}
