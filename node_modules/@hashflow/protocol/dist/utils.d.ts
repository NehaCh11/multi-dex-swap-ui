import { BigNumber, Signer } from 'ethers';
import { TypedDataSigner } from '@ethersproject/abstract-signer';
export declare const ZERO_ADDRESS = "0x0000000000000000000000000000000000000000";
export interface RFQMQuoteData {
    pool: string;
    externalAccount: string;
    trader: string;
    baseToken: string;
    quoteToken: string;
    baseTokenAmount: BigNumber;
    quoteTokenAmount: BigNumber;
    quoteExpiry: number;
    txid: string;
}
export interface QuoteData {
    pool: string;
    externalAccount: string;
    trader: string;
    effectiveTrader: string;
    baseToken: string;
    quoteToken: string;
    maxBaseTokenAmount: BigNumber;
    maxQuoteTokenAmount: BigNumber;
    quoteExpiry: number;
    nonce: number;
    txid: string;
}
export interface XChainQuoteData {
    srcChainId: number;
    dstChainId: number;
    srcPool: string;
    dstPool: string;
    srcExternalAccount: string;
    dstExternalAccount: string;
    trader: string;
    baseToken: string;
    quoteToken: string;
    baseTokenAmount: BigNumber;
    quoteTokenAmount: BigNumber;
    quoteExpiry: number;
    nonce: number;
    txid: string;
}
export interface XChainRFQMQuoteData {
    srcChainId: number;
    dstChainId: number;
    srcPool: string;
    dstPool: string;
    srcExternalAccount: string;
    dstExternalAccount: string;
    trader: string;
    baseToken: string;
    quoteToken: string;
    baseTokenAmount: BigNumber;
    quoteTokenAmount: BigNumber;
    quoteExpiry: number;
    txid: string;
}
export interface DepositData {
    pool: string;
    token: string;
    amount: BigNumber;
    nonce: number;
}
export declare function signQuote(quote: QuoteData, signer: Signer): Promise<string>;
export declare function signQuoteXChain(quote: XChainQuoteData, signer: Signer): Promise<string>;
export declare function signDeposit(lp: string, depositData: DepositData, signer: Signer): Promise<string>;
export declare function signQuoteRFQMTaker(quote: RFQMQuoteData, chainId: number, routerAddress: string, signer: TypedDataSigner): Promise<string>;
export declare function signQuoteRFQMMaker(quote: RFQMQuoteData, signer: Signer): Promise<string>;
export declare function signQuoteXChainRFQMTaker(quote: XChainRFQMQuoteData, chainId: number, routerAddress: string, signer: TypedDataSigner): Promise<string>;
export declare function signQuoteXChainRFQMMaker(quote: XChainRFQMQuoteData, signer: Signer): Promise<string>;
export declare function hashDeposit(lp: string, depositData: DepositData): string;
export declare function hashQuote(quote: QuoteData): string;
export declare function hashQuoteRFQMMaker(quote: RFQMQuoteData): string;
export declare function hashQuoteXChain(quote: XChainQuoteData): string;
export declare function hashQuoteXChainRFQMMaker(quote: XChainRFQMQuoteData): string;
export declare function signERC20Permit(owner: string, spender: string, nonce: number, amount: BigNumber, deadline: number, tokenAddress: string, tokenName: string, tokenVersion: string, chainId: number, signer: TypedDataSigner): Promise<string>;
export declare function expandTo18Decimals(n: number): BigNumber;
