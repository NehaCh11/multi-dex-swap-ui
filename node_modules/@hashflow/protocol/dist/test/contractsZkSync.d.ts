import { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';
import { HashflowGovernance, HashflowRouter, TestToken1, TestToken2, LZEndpointMock, HashflowXChainUA, WETH9, HashflowPrivatePoolFactoryZkSync, HashflowPublicPoolFactoryZkSync, HashflowFactoryZkSync } from '../typechain-types/index';
export declare class ContractFactory {
    static deployContracts(): Promise<Contracts>;
}
export declare class Contracts {
    signers: SignerWithAddress[];
    hashflowGovernance: HashflowGovernance;
    hashflowFactory: HashflowFactoryZkSync;
    hashflowXChainUa: HashflowXChainUA;
    hashflowRouter: HashflowRouter;
    hashflowPrivatePoolFactory: HashflowPrivatePoolFactoryZkSync;
    hashflowPublicPoolFactory: HashflowPublicPoolFactoryZkSync;
    lzEndpointMock: LZEndpointMock;
    testToken1: TestToken1;
    testToken2: TestToken2;
    weth: WETH9;
    owner: string;
    signer: string;
    trader: string;
    effectiveTrader: string;
    mmExternalAccount: string;
    mmExternalAccount2: string;
    constructor(signers: SignerWithAddress[], hashflowGovernance: HashflowGovernance, hashflowFactory: HashflowFactoryZkSync, hashflowXChainUa: HashflowXChainUA, hashflowRouter: HashflowRouter, hashflowPrivatePoolFactory: HashflowPrivatePoolFactoryZkSync, hashflowPublicPoolFactory: HashflowPublicPoolFactoryZkSync, lzEndpointMock: LZEndpointMock, testToken1: TestToken1, testToken2: TestToken2, weth: WETH9);
}
