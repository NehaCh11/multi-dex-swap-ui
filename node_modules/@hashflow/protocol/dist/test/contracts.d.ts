import { SignerWithAddress } from '@nomiclabs/hardhat-ethers/signers';
import { HashflowGovernance, HashflowRouter, HashflowPrivatePool, HashflowERC20, HashflowFactory, TestToken1, TestToken2, LZEndpointMock, HashflowXChainUA, HashflowPublicPool, WETH9, DummyMKR } from '../typechain-types/index';
export declare class ContractFactory {
    static deployContracts(): Promise<Contracts>;
}
export declare class Contracts {
    signers: SignerWithAddress[];
    governance: HashflowGovernance;
    factory: HashflowFactory;
    xChainUa: HashflowXChainUA;
    router: HashflowRouter;
    privPoolImpl: HashflowPrivatePool;
    pubPoolImpl: HashflowPublicPool;
    hTokenImpl: HashflowERC20;
    lzEndpoint: LZEndpointMock;
    tt1: TestToken1;
    tt2: TestToken2;
    weth: WETH9;
    dummyMKR: DummyMKR;
    owner: string;
    signer: string;
    trader: string;
    effectiveTrader: string;
    mmExternalAccount: string;
    mmExternalAccount2: string;
    constructor(signers: SignerWithAddress[], governance: HashflowGovernance, factory: HashflowFactory, xChainUa: HashflowXChainUA, router: HashflowRouter, privPoolImpl: HashflowPrivatePool, pubPoolImpl: HashflowPublicPool, hTokenImpl: HashflowERC20, lzEndpoint: LZEndpointMock, tt1: TestToken1, tt2: TestToken2, weth: WETH9, dummyMKR: DummyMKR);
}
