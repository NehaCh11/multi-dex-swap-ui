"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DebugWormhole__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "getContractRemote",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVM",
                type: "bytes",
            },
        ],
        name: "getVAAChainId",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "encodedVM",
                type: "bytes",
            },
        ],
        name: "getVAAEmitterAddress",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "remote",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "newRemote",
                type: "bytes",
            },
        ],
        name: "updateRemote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "wh",
                type: "address",
            },
        ],
        name: "updateWormhole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "wormhole",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610a7d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806384acd1bb1161005b57806384acd1bb146100d8578063c626cd9514610103578063cdf0ae7614610116578063d598215b1461014657600080fd5b80632650fcc8146100825780632cdc6da0146100975780635d366654146100b2575b600080fd5b610095610090366004610434565b61015b565b005b61009f61016c565b6040519081526020015b60405180910390f35b6100c56100c0366004610562565b6101a2565b60405161ffff90911681526020016100a9565b6001546100eb906001600160a01b031681565b6040516001600160a01b0390911681526020016100a9565b61009f610111366004610562565b61025c565b6100956101243660046105e2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61014e61030d565b6040516100a9919061066e565b6101676000838361039b565b505050565b600080805461017a90610681565b610186915060206106d1565b6101919060086106e8565b61019b6000610707565b901c919050565b60015460405163607ec5ef60e11b81526000918291829182916001600160a01b039091169063c0fd8bde906101db90889060040161066e565b600060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022091908101906108ef565b92509250925081819061024f5760405162461bcd60e51b8152600401610246919061066e565b60405180910390fd5b5050506060015192915050565b60015460405163607ec5ef60e11b81526000918291829182916001600160a01b039091169063c0fd8bde9061029590889060040161066e565b600060405180830381865afa1580156102b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102da91908101906108ef565b9250925092508181906103005760405162461bcd60e51b8152600401610246919061066e565b5050506080015192915050565b6000805461031a90610681565b80601f016020809104026020016040519081016040528092919081815260200182805461034690610681565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b505050505081565b8280546103a790610681565b90600052602060002090601f0160209004810192826103c9576000855561040f565b82601f106103e25782800160ff1982351617855561040f565b8280016001018555821561040f579182015b8281111561040f5782358255916020019190600101906103f4565b5061041b92915061041f565b5090565b5b8082111561041b5760008155600101610420565b6000806020838503121561044757600080fd5b823567ffffffffffffffff8082111561045f57600080fd5b818501915085601f83011261047357600080fd5b81358181111561048257600080fd5b86602082850101111561049457600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156104df576104df6104a6565b60405290565b604051610160810167ffffffffffffffff811182821017156104df576104df6104a6565b604051601f8201601f1916810167ffffffffffffffff81118282101715610532576105326104a6565b604052919050565b600067ffffffffffffffff821115610554576105546104a6565b50601f01601f191660200190565b60006020828403121561057457600080fd5b813567ffffffffffffffff81111561058b57600080fd5b8201601f8101841361059c57600080fd5b80356105af6105aa8261053a565b610509565b8181528560208385010111156105c457600080fd5b81602084016020830137600091810160200191909152949350505050565b6000602082840312156105f457600080fd5b81356001600160a01b038116811461060b57600080fd5b9392505050565b60005b8381101561062d578181015183820152602001610615565b8381111561063c576000848401525b50505050565b6000815180845261065a816020860160208601610612565b601f01601f19169290920160200192915050565b60208152600061060b6020830184610642565b600181811c9082168061069557607f821691505b6020821081036106b557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106e3576106e36106bb565b500390565b6000816000190483118215151615610702576107026106bb565b500290565b8054600090600180821691901c8161071d57607f165b6020811080830361073e57634e487b7160e01b600052602260045260246000fd5b849250601f8211156107565784600052602060002092505b825493508015610770576000198260200360031b1b841693505b505050919050565b805160ff8116811461078957600080fd5b919050565b805163ffffffff8116811461078957600080fd5b805161ffff8116811461078957600080fd5b805167ffffffffffffffff8116811461078957600080fd5b600082601f8301126107dd57600080fd5b81516107eb6105aa8261053a565b81815284602083860101111561080057600080fd5b610811826020830160208701610612565b949350505050565b600082601f83011261082a57600080fd5b8151602067ffffffffffffffff821115610846576108466104a6565b610854818360051b01610509565b82815260079290921b8401810191818101908684111561087357600080fd5b8286015b848110156108d457608081890312156108905760008081fd5b6108986104bc565b81518152848201518582015260406108b1818401610778565b9082015260606108c2838201610778565b90820152835291830191608001610877565b509695505050505050565b8051801515811461078957600080fd5b60008060006060848603121561090457600080fd5b835167ffffffffffffffff8082111561091c57600080fd5b90850190610160828803121561093157600080fd5b6109396104e5565b61094283610778565b81526109506020840161078e565b60208201526109616040840161078e565b6040820152610972606084016107a2565b60608201526080830151608082015261098d60a084016107b4565b60a082015261099e60c08401610778565b60c082015260e0830151828111156109b557600080fd5b6109c1898286016107cc565b60e0830152506101006109d581850161078e565b9082015261012083810151838111156109ed57600080fd5b6109f98a828701610819565b918301919091525061014083810151908201529450610a1a602087016108df565b93506040860151915080821115610a3057600080fd5b50610a3d868287016107cc565b915050925092509256fea26469706673582212204bea684f6459c3b3f851df12a22124b5471d891a711df68a5a0baa6c538bd1bf64736f6c634300080d0033";
const isSuperArgs = (xs) => xs.length > 1;
class DebugWormhole__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.DebugWormhole__factory = DebugWormhole__factory;
DebugWormhole__factory.bytecode = _bytecode;
DebugWormhole__factory.abi = _abi;
