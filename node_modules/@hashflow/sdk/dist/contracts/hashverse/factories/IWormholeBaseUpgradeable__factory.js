"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IWormholeBaseUpgradeable__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "newWormhole",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "oldWormhole",
                type: "address",
            },
        ],
        name: "UpdateWormhole",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint16",
                name: "newWormholeChainId",
                type: "uint16",
            },
            {
                indexed: false,
                internalType: "uint16",
                name: "oldWormholeChainId",
                type: "uint16",
            },
        ],
        name: "UpdateWormholeChainId",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "newConsistencyLevel",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "oldConsistencyLevel",
                type: "uint8",
            },
        ],
        name: "UpdateWormholeConsistencyLevel",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint16",
                name: "wormholeChainId",
                type: "uint16",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "remote",
                type: "bytes32",
            },
        ],
        name: "UpdateWormholeRemote",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint16",
                name: "emitterChainId",
                type: "uint16",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "emitterAddress",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        name: "WormholeReceive",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint64",
                name: "sequence",
                type: "uint64",
            },
        ],
        name: "WormholeSend",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "wormhole",
                type: "address",
            },
        ],
        name: "updateWormhole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "wormholeConsistencyLevel",
                type: "uint8",
            },
        ],
        name: "updateWormholeConsistencyLevel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint16",
                name: "wormholeChainId",
                type: "uint16",
            },
            {
                internalType: "bytes32",
                name: "authorizedRemote",
                type: "bytes32",
            },
        ],
        name: "updateWormholeRemote",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawRelayerFees",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IWormholeBaseUpgradeable__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IWormholeBaseUpgradeable__factory = IWormholeBaseUpgradeable__factory;
IWormholeBaseUpgradeable__factory.abi = _abi;
//# sourceMappingURL=IWormholeBaseUpgradeable__factory.js.map