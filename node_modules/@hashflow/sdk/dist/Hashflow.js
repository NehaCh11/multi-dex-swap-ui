"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hashflow = void 0;
const Contracts_1 = require("./Contracts");
const Hashverse_1 = require("./modules/Hashverse");
const Optimism_1 = require("./modules/Optimism");
const Pool_1 = require("./modules/Pool");
const Token_1 = require("./modules/Token");
class Hashflow {
    constructor({ chainId, signer, provider, }) {
        this.contracts = new Contracts_1.Contracts(chainId, signer, provider);
        this.pool = new Pool_1.Pool(this.contracts);
        this.token = new Token_1.Token(this.contracts);
        this.hashverse = new Hashverse_1.Hashverse(this.contracts);
        this.optimism = new Optimism_1.Optimism(this.contracts);
        if (provider) {
            this.provider = provider;
        }
        else if (signer) {
            this.signer = signer;
            if (!signer.provider) {
                throw new Error(`Supplied Signer does not have a Provider.`);
            }
            this.provider = signer.provider;
        }
        else {
            throw new Error('Missing provider');
        }
    }
}
exports.Hashflow = Hashflow;
//# sourceMappingURL=Hashflow.js.map