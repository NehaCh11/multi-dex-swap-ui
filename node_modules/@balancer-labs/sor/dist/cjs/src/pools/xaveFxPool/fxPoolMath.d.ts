import { BigNumber as OldBigNumber } from '../../utils/bignumber';
import { FxPoolPairData } from './fxPool';
export declare const CURVEMATH_MAX_DIFF = -0.000001000000000000024;
export declare const NEGATIVE_ONE: OldBigNumber;
export declare const ONE: OldBigNumber;
export declare const ONE_TO_THE_SECOND_NUM = 100;
export declare const ONE_TO_THE_SECOND: bigint;
export declare const ONE_TO_THE_EIGHT_NUM = 100000000;
export declare const ONE_TO_THE_EIGHT: bigint;
export declare const ONE_TO_THE_SIX_NUM = 1000000;
export declare const ONE_TO_THE_SIX: bigint;
export declare const ONE_TO_THE_THIRTEEN_NUM = 10000000000000;
export declare const ONE_TO_THE_THIRTEEN: bigint;
export declare const ONE_ETHER: OldBigNumber;
export declare const ALMOST_ZERO = 1e-19;
export declare enum CurveMathRevert {
    LowerHalt = "CurveMath/lower-halt",
    UpperHalt = "CurveMath/upper-halt",
    SwapInvariantViolation = "CurveMath/swap-invariant-violation",
    SwapConvergenceFailed = "CurveMath/swap-convergence-failed",
    CannotSwap = "CannotSwap"
}
interface ReservesInNumeraire {
    tokenInReservesInNumeraire: number;
    tokenOutReservesInNumeraire: number;
    _oGLiq: number;
}
export declare const convertToNumber: (amount: number, baseDecimal: number | string) => number;
export declare const poolBalancesToNumeraire: (poolPairData: FxPoolPairData) => ReservesInNumeraire;
export declare const getBaseDecimals: (decimals: number) => string | 100 | 1000000;
export declare const viewRawAmount: (_amount: number, rate: number) => OldBigNumber;
export declare function _exactTokenInForTokenOut(amount: OldBigNumber, poolPairData: FxPoolPairData): OldBigNumber;
export declare function _tokenInForExactTokenOut(amount: OldBigNumber, poolPairData: FxPoolPairData): OldBigNumber;
export declare const spotPriceBeforeSwap: (amount: OldBigNumber, poolPairData: FxPoolPairData) => OldBigNumber;
export declare const _spotPriceAfterSwapExactTokenInForTokenOut: (poolPairData: FxPoolPairData, amount: OldBigNumber) => OldBigNumber;
export declare const _spotPriceAfterSwapTokenInForExactTokenOut: (poolPairData: FxPoolPairData, amount: OldBigNumber) => OldBigNumber;
export declare const _derivativeSpotPriceAfterSwapExactTokenInForTokenOut: (amount: OldBigNumber, poolPairData: FxPoolPairData) => OldBigNumber;
export declare const _derivativeSpotPriceAfterSwapTokenInForExactTokenOut: (amount: OldBigNumber, poolPairData: FxPoolPairData) => OldBigNumber;
export {};
