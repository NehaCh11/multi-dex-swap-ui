{"version":3,"file":"weightedHelpers.js","sources":["../../../../../src/frontendHelpers/weightedHelpers.ts"],"sourcesContent":["import {\n    BigNumber,\n    BigNumberish,\n    formatFixed,\n    parseFixed,\n} from '@ethersproject/bignumber';\nimport { Zero } from '@ethersproject/constants';\nimport { bnum, ZERO } from '../utils/bignumber';\nimport * as weightedMath from '../pools/weightedPool/weightedMath';\nimport { WeightedPoolPairData } from '../pools/weightedPool/weightedPool';\n\n/////////\n/// UI Helpers\n/////////\n\n// Get BPT amount for token amounts with zero-price impact\n// This function is the same regardless of whether we are considering\n// an Add or Remove liquidity operation: The spot prices of BPT in tokens\n// are the same regardless.\nexport function BPTForTokensZeroPriceImpact(\n    balances: BigNumberish[],\n    decimals: number[],\n    normalizedWeights: BigNumberish[],\n    amounts: BigNumberish[],\n    bptTotalSupply: BigNumberish\n): BigNumber {\n    const amountBPTOut = amounts.reduce((totalBptOut, amountIn, i) => {\n        // Calculate amount of BPT gained per token in\n        const poolPairData: WeightedPoolPairData = {\n            balanceIn: balances[i],\n            decimalsIn: decimals[i],\n            balanceOut: bptTotalSupply,\n            weightIn: normalizedWeights[i],\n            swapFee: Zero,\n        } as WeightedPoolPairData;\n        const BPTPrice = weightedMath._spotPriceAfterSwapTokenInForExactBPTOut(\n            ZERO,\n            poolPairData\n        );\n\n        // Multiply by amountIn to get contribution to total bpt out\n        const downscaledAmountIn = formatFixed(amountIn, decimals[i]);\n        const downscaledBptOut = bnum(downscaledAmountIn)\n            .div(BPTPrice)\n            .toString();\n        return BigNumber.from(totalBptOut).add(\n            parseFixed(downscaledBptOut, 18)\n        );\n    }, Zero);\n\n    return BigNumber.from(amountBPTOut);\n}\n"],"names":["BPTForTokensZeroPriceImpact","balances","decimals","normalizedWeights","amounts","bptTotalSupply","amountBPTOut","reduce","totalBptOut","amountIn","i","poolPairData","balanceIn","decimalsIn","balanceOut","weightIn","swapFee","Zero","BPTPrice","weightedMath._spotPriceAfterSwapTokenInForExactBPTOut","ZERO","downscaledAmountIn","formatFixed","downscaledBptOut","bnum","div","toString","BigNumber","from","add","parseFixed"],"mappings":"8RAmBM,SAAUA,EACZC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAeF,EAAQG,QAAO,CAACC,EAAaC,EAAUC,KAExD,MAAMC,EAAqC,CACvCC,UAAWX,EAASS,GACpBG,WAAYX,EAASQ,GACrBI,WAAYT,EACZU,SAAUZ,EAAkBO,GAC5BM,QAASC,GAEPC,EAAWC,EACbC,EACAT,GAIEU,EAAqBC,EAAYb,EAAUP,EAASQ,IACpDa,EAAmBC,EAAKH,GACzBI,IAAIP,GACJQ,WACL,OAAOC,EAAUC,KAAKpB,GAAaqB,IAC/BC,EAAWP,EAAkB,IAChC,GACFN,GAEH,OAAOU,EAAUC,KAAKtB,EAC1B"}