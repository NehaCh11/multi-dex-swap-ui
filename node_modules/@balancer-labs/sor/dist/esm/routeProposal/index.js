import{parseToPoolsDict as t,filterPoolsOfInterest as e,producePaths as s,getBoostedPaths as o,getPathsUsingStaBalPool as i}from"./filtering.js";import{calculatePathLimits as c}from"./pathLimits.js";class r{constructor(t){this.config=t,this.cache={}}getCandidatePaths(r,a,n,h,m){if(r=r.toLowerCase(),a=a.toLowerCase(),0===h.length)return[];const f=this.cache[`${r}${a}${n}${m.timestamp}`];if(!m.forceRefresh&&f)return f.paths;const g=t(h,m.timestamp),[p,$,u]=e(g,r,a,m.maxPools),C=s(r,a,p,$,u,g),l=o(r,a,g,this.config),L=i(r,a,g,g,this.config),d=C.concat(...l).concat(...L),[w]=c(d,n);return this.cache[`${r}${a}${n}${m.timestamp}`]={paths:w},w}getCandidatePathsFromDict(t,i,r,a,n){if(t=t.toLowerCase(),i=i.toLowerCase(),0===Object.keys(a).length)return[];const[h,m,f]=e(a,t,i,n),g=s(t,i,h,m,f,a),p=o(t,i,a,this.config),$=g.concat(...p),[u]=c($,r);return u}}export{r as RouteProposer};
//# sourceMappingURL=index.js.map
