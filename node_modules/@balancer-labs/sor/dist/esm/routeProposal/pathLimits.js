import{parseFixed as t}from"@ethersproject/bignumber";import{Zero as o}from"@ethersproject/constants";import{SwapTypes as i}from"../types.js";import{getOutputAmountSwap as n}from"../pools/index.js";import"../utils/bignumber.js";import{BigNumber as e}from"bignumber.js";function a(t,i){let n=o;t.forEach((t=>{t.limitAmount=m(t,i),n=n.add(t.limitAmount)}));return[t.sort(((t,o)=>o.limitAmount.gt(t.limitAmount)?1:-1)),n]}function m(a,m){const p=a.poolPairData;let r;if(m===i.SwapExactIn){r=a.pools[p.length-1].getLimitAmountSwap(p[p.length-1],i.SwapExactIn);for(let t=p.length-2;t>=0;t--){const o=a.pools[t].getLimitAmountSwap(p[t],i.SwapExactIn);if(a.pools[t].getLimitAmountSwap(p[t],i.SwapExactOut).lte(r))r=o;else{const m=n(a.pools[t],a.poolPairData[t],i.SwapExactOut,r);r=e.min(m,o)}}if(r.isZero())return o;return t(r.dp(p[0].decimalsIn).toString(),p[0].decimalsIn)}r=a.pools[0].getLimitAmountSwap(p[0],i.SwapExactOut);for(let t=1;t<p.length;t++){const o=a.pools[t].getLimitAmountSwap(p[t],i.SwapExactIn),m=a.pools[t].getLimitAmountSwap(p[t],i.SwapExactOut);if(o.lte(r))r=m;else{const o=n(a.pools[t],a.poolPairData[t],i.SwapExactIn,r);r=e.min(o,m)}}return r.isZero()?o:t(r.dp(p[p.length-1].decimalsOut).toString(),p[p.length-1].decimalsOut)}export{a as calculatePathLimits,m as getLimitAmountSwapForPath};
//# sourceMappingURL=pathLimits.js.map
