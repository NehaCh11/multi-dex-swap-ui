{"version":3,"file":"unbutton.js","sources":["../../../../../src/wrappers/unbutton.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { Provider } from '@ethersproject/providers';\nimport { Contract } from '@ethersproject/contracts';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\n\n// The unbutton ERC-20 wrapper is a generic wrapper which wraps any rebasing token\n// into a fixed balance version.\n// https://github.com/buttonwood-protocol/button-wrappers/blob/main/contracts/UnbuttonToken.sol#L18\n\nexport const TokensToUnbuttonWrapperMap = {\n    Networks: [1],\n    1: {\n        // underlying => wrapper\n\n        // AMPL => WAMPL\n        '0xd46ba6d942050d489dbd938a2c909a5d5039a161':\n            '0xedb171c18ce90b633db442f2a6f72874093b49ef',\n\n        // aAMPL -> ubAAMPL\n        '0x1e6bb68acec8fefbd87d192be09bb274170a0548':\n            '0xF03387d8d0FF326ab586A58E0ab4121d106147DF',\n    },\n};\n\n// Returns the current wrapper exchange rate,\n// ie) number of wrapper tokens for 1e18 (ONE) underlying token\nexport async function getWrapperRate(\n    provider: Provider,\n    wrapperAddress: string\n): Promise<BigNumber> {\n    const ubWrapper = new Contract(\n        wrapperAddress,\n        [\n            'function underlyingToWrapper(uint256 amount) external view returns (uint256)',\n        ],\n        provider\n    );\n    return ubWrapper.underlyingToWrapper(ONE);\n}\n"],"names":["TokensToUnbuttonWrapperMap","Networks","getWrapperRate","provider","wrapperAddress","Contract","underlyingToWrapper","ONE"],"mappings":"sKASa,MAAAA,EAA6B,CACtCC,SAAU,CAAC,GACX,EAAG,CAIC,6CACI,6CAGJ,6CACI,+CAMU,SAAAC,EAClBC,EACAC,4CASA,OAPkB,IAAIC,EAClBD,EACA,CACI,gFAEJD,GAEaG,oBAAoBC,KACxC"}