import { BigNumber } from '@ethersproject/bignumber';
import { Provider } from '@ethersproject/providers';
import { SubgraphPoolBase, SwapInfo, SwapTypes, SwapV2 } from '../../types';
export declare const Lido: {
    Networks: number[];
    stETH: {
        1: string;
        42: string;
    };
    wstETH: {
        1: string;
        42: string;
    };
    WETH: {
        1: string;
        42: string;
    };
    DAI: {
        1: string;
        42: string;
    };
    USDC: {
        1: string;
        42: string;
    };
    USDT: {
        1: string;
        42: string;
    };
    StaticPools: {
        staBal: {
            1: string;
            42: string;
        };
        wethDai: {
            1: string;
            42: string;
        };
        wstEthWeth: {
            1: string;
            42: string;
        };
    };
};
type Route = {
    name: string;
    tokenInDecimals: number;
    tokenOutDecimals: number;
    tokenAddresses: string[];
    swaps: SwapV2[];
};
type RouteMap = {
    [id: string]: Route;
};
export declare const Routes: {
    [network: number]: RouteMap;
};
export declare function isLidoStableSwap(chainId: number, tokenIn: string, tokenOut: string): boolean;
export declare function getStEthRate(provider: Provider, chainId: number): Promise<BigNumber>;
export declare function getLidoStaticSwaps(pools: SubgraphPoolBase[], chainId: number, tokenIn: string, tokenOut: string, swapType: SwapTypes, swapAmount: BigNumber, provider: Provider): Promise<SwapInfo>;
export {};
