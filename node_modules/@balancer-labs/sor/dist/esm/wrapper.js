import{__awaiter as t}from"./external/tslib/tslib.es6.js";import{parseFixed as o,BigNumber as s}from"@ethersproject/bignumber";import"./external/lodash.clonedeep/index.js";import"./utils/bignumber.js";import{getBestPaths as r}from"./router/index.js";import{getWrappedInfo as e,setWrappedInfo as i}from"./wrapInfo.js";import{formatSwaps as n}from"./formatSwaps.js";import{PoolCacher as a}from"./poolCacher.js";import{RouteProposer as p}from"./routeProposal/index.js";import{filterPoolsByType as l}from"./routeProposal/filtering.js";import{SwapCostCalculator as h}from"./swapCostCalculator.js";import{isLidoStableSwap as c,getLidoStaticSwaps as m}from"./pools/lido/index.js";import{isSameAddress as f}from"./utils/index.js";import{EMPTY_SWAPINFO as u}from"./constants.js";import{PoolFilter as d,SwapTypes as w}from"./types.js";import{Zero as g}from"@ethersproject/constants";import{BigNumber as j}from"bignumber.js";import{exports as S}from"./_virtual/index.js";class C{constructor(t,r,e,i){this.provider=t,this.config=r,this.defaultSwapOptions={gasPrice:o("50",9),swapGas:s.from("85000"),poolTypeFilter:d.All,maxPools:4,timestamp:Math.floor(Date.now()/1e3),forceRefresh:!1},this.poolCacher=new a(e),this.routeProposer=new p(r),this.swapCostCalculator=new h(r,i)}getPools(t){return this.poolCacher.getPools(t)}fetchPools(){return t(this,void 0,void 0,(function*(){return this.poolCacher.fetchPools()}))}getSwaps(o,r,n,a,p,h=!1){return t(this,void 0,void 0,(function*(){if(!this.poolCacher.finishedFetching)return S(u);const t=Object.assign(Object.assign({},this.defaultSwapOptions),p);this.useBpt!==h&&(t.forceRefresh=!0,this.useBpt=h);const f=this.poolCacher.getPools(h),d=l(f,t.poolTypeFilter),w=yield e(this.provider,n,o,r,this.config,s.from(a));let g;return g=c(this.config.chainId,o,r)?yield m(d,this.config.chainId,w.tokenIn.addressForSwaps,w.tokenOut.addressForSwaps,n,w.swapAmountForSwaps,this.provider):yield this.processSwaps(w.tokenIn.addressForSwaps,w.tokenOut.addressForSwaps,n,w.swapAmountForSwaps,d,t),g.returnAmount.isZero()||(g=i(g,n,w,this.config)),g}))}getCostOfSwapInToken(o,s,r,e){return t(this,void 0,void 0,(function*(){return r.isZero()?g:this.swapCostCalculator.convertGasCostToToken(o,s,r,e)}))}processSwaps(o,s,r,e,i,a){return t(this,void 0,void 0,(function*(){if(0===i.length)return S(u);const t=this.routeProposer.getCandidatePaths(o,s,r,i,a);if(0==t.length)return S(u);let p,l;t[0].swaps.forEach((t=>{f(t.tokenIn,o)&&(p=t.tokenInDecimals),f(t.tokenOut,s)&&(l=t.tokenOutDecimals)}));const h=yield this.getCostOfSwapInToken(r===w.SwapExactIn?s:o,r===w.SwapExactIn?l:p,a.gasPrice,a.swapGas),[c,m,d,g]=this.getBestPaths(t,e,r,p,l,h,a.maxPools);return n(c,r,e,o,s,m,g,d)}))}getBestPaths(t,s,e,i,n,a,p){const[l,h]=e===w.SwapExactIn?[i,n]:[n,i],[c,m,f,u]=r(t,e,s,l,h,p,a);return[c,o(m.dp(h,j.ROUND_FLOOR).toString(),h),f.toString(),o(u.dp(h,j.ROUND_FLOOR).toString(),h)]}}export{C as SOR};
//# sourceMappingURL=wrapper.js.map
