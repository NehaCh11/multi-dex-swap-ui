{"version":3,"file":"liquidity.js","sources":["../../../../../src/pools/liquidity.ts"],"sourcesContent":["import { BigNumber as OldBigNumber, ZERO, bnum } from '../utils/bignumber';\n\n/*\nIt is possible to compute the normalized liquidity using another function already existing at every pool type, which is the derivative of spot price after swap.\nhttps://quark-ceres-740.notion.site/SOR-Normalized-liquidity-and-highest-liquidity-pool-d81bd3db48e5482ab2275a8eecac33b4\n*/\nexport function universalNormalizedLiquidity(\n    derivativeSpotPriceAtZero: OldBigNumber\n): OldBigNumber {\n    const ans = bnum(1).div(derivativeSpotPriceAtZero);\n    if (ans.isNaN() || ans.lt(ZERO) || !ans.isFinite()) return ZERO;\n    return ans;\n}\n"],"names":["universalNormalizedLiquidity","derivativeSpotPriceAtZero","ans","bnum","div","isNaN","lt","ZERO","isFinite"],"mappings":"uDAMM,SAAUA,EACZC,GAEA,MAAMC,EAAMC,EAAK,GAAGC,IAAIH,GACxB,OAAIC,EAAIG,SAAWH,EAAII,GAAGC,KAAUL,EAAIM,WAAmBD,EACpDL,CACX"}