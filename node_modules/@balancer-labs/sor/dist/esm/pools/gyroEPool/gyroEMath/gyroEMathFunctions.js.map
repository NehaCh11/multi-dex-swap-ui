{"version":3,"file":"gyroEMathFunctions.js","sources":["../../../../../../../src/pools/gyroEPool/gyroEMath/gyroEMathFunctions.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { WeiPerEther as ONE } from '@ethersproject/constants';\nimport {\n    GyroEParams,\n    DerivedGyroEParams,\n    Vector2,\n    QParams,\n    virtualOffset0,\n    virtualOffset1,\n} from './gyroEMathHelpers';\nimport { ONE_XP } from '../../gyroHelpers/constants';\nimport {\n    mulDown,\n    divDown,\n    mulDownMagU,\n    divDownMagU,\n    mulUpMagU,\n    divUpMagU,\n    mulUpXpToNpU,\n    mulDownXpToNpU,\n    divXpU,\n    sqrt,\n} from '../../gyroHelpers/gyroSignedFixedPoint';\nimport { calcXpXpDivLambdaLambda } from './gyroEMathHelpers';\n\n/////////\n/// SPOT PRICE AFTER SWAP CALCULATIONS\n/////////\n\nexport function calcSpotPriceYGivenX(\n    x: BigNumber,\n    params: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2\n): BigNumber {\n    const ab: Vector2 = {\n        x: virtualOffset0(params, d, r),\n        y: virtualOffset1(params, d, r),\n    };\n    const newSpotPriceFactor = solveDerivativeQuadraticSwap(\n        params.lambda,\n        x,\n        params.s,\n        params.c,\n        r,\n        ab,\n        d.tauBeta,\n        d.dSq\n    );\n    return newSpotPriceFactor;\n}\n\nexport function calcSpotPriceXGivenY(\n    y: BigNumber,\n    params: GyroEParams,\n    d: DerivedGyroEParams,\n    r: Vector2\n): BigNumber {\n    const ba: Vector2 = {\n        x: virtualOffset1(params, d, r),\n        y: virtualOffset0(params, d, r),\n    };\n    const newSpotPriceFactor = solveDerivativeQuadraticSwap(\n        params.lambda,\n        y,\n        params.c,\n        params.s,\n        r,\n        ba,\n        {\n            x: d.tauAlpha.x.mul(-1),\n            y: d.tauAlpha.y,\n        },\n        d.dSq\n    );\n    return newSpotPriceFactor;\n}\n\nfunction solveDerivativeQuadraticSwap(\n    lambda: BigNumber,\n    x: BigNumber,\n    s: BigNumber,\n    c: BigNumber,\n    r: Vector2,\n    ab: Vector2,\n    tauBeta: Vector2,\n    dSq: BigNumber\n): BigNumber {\n    const lamBar: Vector2 = {\n        x: ONE_XP.sub(divDownMagU(divDownMagU(ONE_XP, lambda), lambda)),\n        y: ONE_XP.sub(divUpMagU(divUpMagU(ONE_XP, lambda), lambda)),\n    };\n    const q: QParams = {\n        a: BigNumber.from(0),\n        b: BigNumber.from(0),\n        c: BigNumber.from(0),\n    };\n    const xp = x.sub(ab.x);\n    q.b = mulUpXpToNpU(mulDownMagU(s, c), divXpU(lamBar.y, dSq));\n\n    const sTerm: Vector2 = {\n        x: divXpU(mulDownMagU(mulDownMagU(lamBar.y, s), s), dSq),\n        y: divXpU(mulUpMagU(mulUpMagU(lamBar.x, s), s), dSq.add(1)).add(1),\n    };\n    sTerm.x = ONE_XP.sub(sTerm.x);\n    sTerm.y = ONE_XP.sub(sTerm.y);\n\n    q.c = calcXpXpDivLambdaLambda(x, r, lambda, s, c, tauBeta, dSq).mul(-1);\n    q.c = q.c.add(mulDownXpToNpU(mulDownMagU(r.y, r.y), sTerm.y)); // r.y ===  currentInv + err\n    q.c = q.c.gt(BigNumber.from(0))\n        ? sqrt(q.c, BigNumber.from(5))\n        : BigNumber.from(0);\n\n    q.c = mulDown(mulDown(q.c, lambda), lambda);\n    q.c = divDown(xp, q.c);\n\n    if (q.b.sub(q.c).gt(BigNumber.from(0))) {\n        q.a = mulUpXpToNpU(q.b.sub(q.c), divXpU(ONE_XP, sTerm.y).add(1));\n    } else {\n        q.a = mulUpXpToNpU(q.b.sub(q.c), divXpU(ONE_XP, sTerm.x));\n    }\n    return q.a;\n}\n\n/////////\n/// SPOT PRICE DERIVATIVE CALCULATIONS\n/////////\n\nfunction setup(\n    balances,\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2,\n    ixVar: number\n) {\n    const r = rVec.y;\n    const { c, s, lambda } = params;\n    const [x0, y0] = balances;\n    const a = virtualOffset0(params, derived, rVec);\n    const b = virtualOffset1(params, derived, rVec);\n    const ls = ONE.sub(divDown(ONE, mulDown(lambda, lambda)));\n    const f = ONE.sub(fee);\n\n    let R: BigNumber;\n    if (ixVar === 0) {\n        R = sqrt(\n            mulDown(mulDown(r, r), ONE.sub(mulDown(ls, mulDown(s, s)))).sub(\n                divDown(mulDown(x0.sub(a), x0.sub(a)), mulDown(lambda, lambda))\n            ),\n            BigNumber.from(5)\n        );\n    } else {\n        R = sqrt(\n            mulDown(mulDown(r, r), ONE.sub(mulDown(ls, mulDown(c, c)))).sub(\n                divDown(mulDown(y0.sub(b), y0.sub(b)), mulDown(lambda, lambda))\n            ),\n            BigNumber.from(5)\n        );\n    }\n\n    return { x0, y0, c, s, lambda, a, b, ls, f, r, R };\n}\n\nexport function normalizedLiquidityYIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { y0, c, s, lambda, b, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        1\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            divDown(ONE, ONE.sub(mulDown(ls, mulDown(c, c)))),\n            mulDown(\n                R,\n                mulDown(\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(y0.sub(b)),\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(y0.sub(b))\n                )\n            )\n        ),\n        mulDown(mulDown(lambda, lambda), mulDown(R, R)).add(\n            mulDown(y0.sub(b), y0.sub(b))\n        )\n    );\n\n    return returnValue;\n}\n\nexport function normalizedLiquidityXIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { x0, c, s, lambda, a, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        0\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            divDown(ONE, ONE.sub(mulDown(ls, mulDown(s, s)))),\n            mulDown(\n                R,\n                mulDown(\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(x0.sub(a)),\n                    mulDown(\n                        mulDown(\n                            mulDown(mulDown(ls, s), c),\n                            mulDown(lambda, lambda)\n                        ),\n                        R\n                    ).sub(x0.sub(a))\n                )\n            )\n        ),\n        mulDown(mulDown(lambda, lambda), mulDown(R, R)).add(\n            mulDown(x0.sub(a), x0.sub(a))\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPyDXIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { x0, c, s, lambda, a, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        0\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            ONE.sub(mulDown(ls, mulDown(s, s))),\n            divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n                divDown(\n                    mulDown(x0.sub(a), x0.sub(a)),\n                    mulDown(\n                        mulDown(\n                            mulDown(lambda, lambda),\n                            mulDown(lambda, lambda)\n                        ),\n                        mulDown(R, mulDown(R, R))\n                    )\n                )\n            )\n        ),\n        mulDown(\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(x0.sub(a), mulDown(mulDown(lambda, lambda), R))\n            ),\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(x0.sub(a), mulDown(mulDown(lambda, lambda), R))\n            )\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPxDYIn(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { y0, c, s, lambda, b, ls, R } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        1\n    );\n\n    const returnValue = divDown(\n        mulDown(\n            ONE.sub(mulDown(ls, mulDown(c, c))),\n            divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n                divDown(\n                    mulDown(y0.sub(b), y0.sub(b)),\n                    mulDown(\n                        mulDown(\n                            mulDown(lambda, lambda),\n                            mulDown(lambda, lambda)\n                        ),\n                        mulDown(R, mulDown(R, R))\n                    )\n                )\n            )\n        ),\n        mulDown(\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(y0.sub(b), mulDown(mulDown(lambda, lambda), R))\n            ),\n            mulDown(mulDown(ls, s), c).sub(\n                divDown(y0.sub(b), mulDown(mulDown(lambda, lambda), R))\n            )\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPxDXOut(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { x0, s, lambda, a, ls, R, f } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        0\n    );\n\n    const returnValue = mulDown(\n        divDown(ONE, mulDown(f, ONE.sub(mulDown(ls, mulDown(s, s))))),\n        divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n            divDown(\n                mulDown(x0.sub(a), x0.sub(a)),\n                mulDown(\n                    mulDown(mulDown(lambda, lambda), mulDown(lambda, lambda)),\n                    mulDown(mulDown(R, R), R)\n                )\n            )\n        )\n    );\n\n    return returnValue;\n}\n\nexport function dPyDYOut(\n    balances: BigNumber[],\n    params: GyroEParams,\n    derived: DerivedGyroEParams,\n    fee: BigNumber,\n    rVec: Vector2\n): BigNumber {\n    const { y0, c, lambda, b, ls, R, f } = setup(\n        balances,\n        params,\n        derived,\n        fee,\n        rVec,\n        1\n    );\n\n    const returnValue = mulDown(\n        divDown(ONE, mulDown(f, ONE.sub(mulDown(ls, mulDown(c, c))))),\n        divDown(ONE, mulDown(mulDown(lambda, lambda), R)).add(\n            divDown(\n                mulDown(y0.sub(b), y0.sub(b)),\n                mulDown(\n                    mulDown(mulDown(lambda, lambda), mulDown(lambda, lambda)),\n                    mulDown(mulDown(R, R), R)\n                )\n            )\n        )\n    );\n\n    return returnValue;\n}\n"],"names":["calcSpotPriceYGivenX","x","params","d","r","ab","virtualOffset0","y","virtualOffset1","solveDerivativeQuadraticSwap","lambda","s","c","tauBeta","dSq","calcSpotPriceXGivenY","ba","tauAlpha","mul","lamBar","ONE_XP","sub","divDownMagU","divUpMagU","q","a","BigNumber","from","b","xp","mulUpXpToNpU","mulDownMagU","divXpU","sTerm","mulUpMagU","add","calcXpXpDivLambdaLambda","mulDownXpToNpU","gt","sqrt","mulDown","divDown","setup","balances","derived","fee","rVec","ixVar","x0","y0","ls","ONE","f","R","normalizedLiquidityYIn","normalizedLiquidityXIn","dPyDXIn","dPxDYIn","dPxDXOut","dPyDYOut"],"mappings":"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"}