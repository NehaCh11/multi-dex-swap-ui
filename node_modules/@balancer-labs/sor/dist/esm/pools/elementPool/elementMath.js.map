{"version":3,"file":"elementMath.js","sources":["../../../../../../src/pools/elementPool/elementMath.ts"],"sourcesContent":["import { formatFixed } from '@ethersproject/bignumber';\nimport { BigNumber as OldBigNumber, bnum } from '../../utils/bignumber';\nimport { ElementPoolPairData } from './elementPool';\n\n// calc_out_given_in (swap)\nexport function _exactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        Bo -\n            (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (1 / (1 - t)) -\n            Math.abs(\n                Ai -\n                    Bo +\n                    (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                        (1 / (1 - t))\n            ) *\n                f\n    );\n}\n\n// calc_in_given_out (swap)\nexport function _tokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    // The formula below returns some dust (due to rounding errors) but when\n    // we input zero the output should be zero\n    if (amount.isZero()) return amount;\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        -Bi +\n            (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                (1 / (1 - t)) +\n            Math.abs(\n                -Ao -\n                    Bi +\n                    (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (1 / (1 - t))\n            ) *\n                f\n    );\n}\n\n/////////\n/// SpotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _spotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        1 /\n            ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (-1 + 1 / (1 - t)) /\n                (Ai + Bi) ** t -\n                Math.abs(\n                    1 -\n                        (Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-1 + 1 / (1 - t)) /\n                            (Ai + Bi) ** t\n                ) *\n                    f)\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _spotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n            (-1 + 1 / (1 - t)) /\n            (-Ao + Bo) ** t +\n            Math.abs(\n                -1 +\n                    (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (-1 + 1 / (1 - t)) /\n                        (-Ao + Bo) ** t\n            ) *\n                f\n    );\n}\n\n/////////\n///  Derivatives of spotPriceAfterSwap\n/////////\n\n// PairType = 'token->token'\n// SwapType = 'swapExactIn'\nexport function _derivativeSpotPriceAfterSwapExactTokenInForTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ai = amount.toNumber();\n    return bnum(\n        -(\n            (-(\n                ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                    (-2 + 1 / (1 - t)) *\n                    (-1 + 1 / (1 - t)) *\n                    (1 - t)) /\n                (Ai + Bi) ** (2 * t)\n            ) -\n                (Ai + Bi) ** (-1 - t) *\n                    (Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                        (-1 + 1 / (1 - t)) *\n                    t -\n                f *\n                    Math.abs(\n                        ((Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-2 + 1 / (1 - t)) *\n                            (-1 + 1 / (1 - t)) *\n                            (1 - t)) /\n                            (Ai + Bi) ** (2 * t) +\n                            (Ai + Bi) ** (-1 - t) *\n                                (Bi ** (1 - t) -\n                                    (Ai + Bi) ** (1 - t) +\n                                    Bo ** (1 - t)) **\n                                    (-1 + 1 / (1 - t)) *\n                                t\n                    )) /\n            ((Bi ** (1 - t) - (Ai + Bi) ** (1 - t) + Bo ** (1 - t)) **\n                (-1 + 1 / (1 - t)) /\n                (Ai + Bi) ** t -\n                Math.abs(\n                    1 -\n                        (Bi ** (1 - t) -\n                            (Ai + Bi) ** (1 - t) +\n                            Bo ** (1 - t)) **\n                            (-1 + 1 / (1 - t)) /\n                            (Ai + Bi) ** t\n                ) *\n                    f) **\n                2\n        )\n    );\n}\n\n// PairType = 'token->token'\n// SwapType = 'swapExactOut'\nexport function _derivativeSpotPriceAfterSwapTokenInForExactTokenOut(\n    amount: OldBigNumber,\n    poolPairData: ElementPoolPairData\n): OldBigNumber {\n    const f = parseFloat(formatFixed(poolPairData.swapFee, 18));\n    const Bi = parseFloat(\n        formatFixed(poolPairData.balanceIn, poolPairData.decimalsIn)\n    );\n    const Bo = parseFloat(\n        formatFixed(poolPairData.balanceOut, poolPairData.decimalsOut)\n    );\n    const t = getTimeTillExpiry(\n        poolPairData.expiryTime,\n        poolPairData.currentBlockTimestamp,\n        poolPairData.unitSeconds\n    );\n    const Ao = amount.toNumber();\n    return bnum(\n        ((Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n            (-2 + 1 / (1 - t)) *\n            (-1 + 1 / (1 - t)) *\n            (1 - t)) /\n            (-Ao + Bo) ** (2 * t) +\n            (-Ao + Bo) ** (-1 - t) *\n                (Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                    (-1 + 1 / (1 - t)) *\n                t +\n            f *\n                Math.abs(\n                    ((Bi ** (1 - t) + Bo ** (1 - t) - (-Ao + Bo) ** (1 - t)) **\n                        (-2 + 1 / (1 - t)) *\n                        (-1 + 1 / (1 - t)) *\n                        (1 - t)) /\n                        (-Ao + Bo) ** (2 * t) +\n                        (-Ao + Bo) ** (-1 - t) *\n                            (Bi ** (1 - t) +\n                                Bo ** (1 - t) -\n                                (-Ao + Bo) ** (1 - t)) **\n                                (-1 + 1 / (1 - t)) *\n                            t\n                )\n    );\n}\n\nexport function getTimeTillExpiry(\n    expiryTime: number,\n    currentBlockTimestamp: number,\n    unitSeconds: number\n): number {\n    let t =\n        currentBlockTimestamp < expiryTime\n            ? expiryTime - currentBlockTimestamp\n            : 0;\n    t = t / unitSeconds;\n    return t;\n}\n"],"names":["_exactTokenInForTokenOut","amount","poolPairData","isZero","f","parseFloat","formatFixed","swapFee","Bi","balanceIn","decimalsIn","Bo","balanceOut","decimalsOut","t","getTimeTillExpiry","expiryTime","currentBlockTimestamp","unitSeconds","Ai","toNumber","bnum","Math","abs","_tokenInForExactTokenOut","Ao","_spotPriceAfterSwapExactTokenInForTokenOut","_spotPriceAfterSwapTokenInForExactTokenOut","_derivativeSpotPriceAfterSwapExactTokenInForTokenOut","_derivativeSpotPriceAfterSwapTokenInForExactTokenOut"],"mappings":"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"}