import{MathSol as n,BZERO as t}from"../../utils/basicOperations.js";const e=BigInt(1e3);function i(i,o){let l=t;const r=o.length;for(let n=0;n<r;n++)l+=o[n];if(l==t)return t;let d=t,u=l;const c=i*BigInt(r);for(let t=0;t<255;t++){let t=u;for(let e=0;e<r;e++)t=n.divDown(n.mul(t,u),n.mul(o[e],BigInt(r)));if(d=u,u=n.divDown(n.mul(n.divDown(n.mul(c,l),e)+n.mul(t,BigInt(r)),u),n.divDown(n.mul(c-e,u),e)+n.mul(BigInt(r+1),t)),u>d){if(u-d<=1)return u}else if(d-u<=1)return u}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}function o(t,e,o,l,r,d){r=function(t,e){const i=n.mulUpFixed(t,e);return t-i}(r,d);const u=i(t,e),c=e[o];e[o]=c+r;const g=s(t,e,u,l);return e[l]-g-BigInt(1)}function l(t,e,o,l,r,d){const u=i(t,e);e[l]=n.sub(e[l],r);const c=s(t,e,u,o);let g=n.add(n.sub(c,e[o]),BigInt(1));return g=function(t,e){return n.divUpFixed(t,n.complementFixed(e))}(g,d),g}function r(t,e,o,l,r){let d=BigInt(0);for(let n=0;n<e.length;n++)d+=e[n];const u=new Array(o.length);let c=BigInt(0);for(let t=0;t<e.length;t++){const i=n.divDownFixed(e[t],d);u[t]=n.divDownFixed(e[t]+o[t],e[t]),c+=n.mulDownFixed(u[t],i)}const g=new Array(e.length);for(let t=0;t<e.length;t++){let i;if(u[t]>c){const l=n.mulDownFixed(e[t],c-n.ONE),d=o[t]-l;i=l+n.mulDownFixed(d,n.ONE-r)}else i=o[t];g[t]=e[t]+i}const s=i(t,e),m=i(t,g),x=n.divDownFixed(m,s);return x>n.ONE?n.mulDownFixed(l,x-n.ONE):BigInt(0)}function d(t,e,o,l,r,d){const u=i(t,e),c=s(t,e,n.mulUpFixed(n.divUpFixed(n.add(r,l),r),u),o),g=n.sub(c,e[o]);let m=BigInt(0);for(let t=0;t<e.length;t++)m=n.add(m,e[t]);const x=n.divDownFixed(e[o],m),F=n.complementFixed(x),f=n.mulUpFixed(g,F),I=n.sub(g,f);return n.add(I,n.divUpFixed(f,n.sub(n.ONE,d)))}function u(t,e,o,l,r){let d=BigInt(0);for(let n=0;n<e.length;n++)d+=e[n];const u=new Array(o.length);let c=BigInt(0);for(let t=0;t<e.length;t++){const i=n.divUpFixed(e[t],d);u[t]=n.divUpFixed(e[t]-o[t],e[t]),c+=n.mulUpFixed(u[t],i)}const g=new Array(e.length);for(let t=0;t<e.length;t++){let i;if(c>u[t]){const l=n.mulDownFixed(e[t],n.complementFixed(c)),d=o[t]-l;i=l+n.divUpFixed(d,n.ONE-r)}else i=o[t];g[t]=e[t]-i}const s=i(t,e),m=i(t,g),x=n.divDownFixed(m,s);return n.mulUpFixed(l,n.complementFixed(x))}function c(t,e,o,l,r,d){const u=i(t,e),c=s(t,e,n.mulUpFixed(n.divUpFixed(r-l,r),u),o),g=e[o]-c;let m=BigInt(0);for(let n=0;n<e.length;n++)m+=e[n];const x=n.divDownFixed(e[o],m),F=n.complementFixed(x),f=n.mulUpFixed(g,F);return g-f+n.mulDownFixed(f,n.ONE-d)}function g(t,e,i){const o=n.divDownFixed(e,i),l=new Array(t.length);for(let e=0;e<t.length;e++)l[e]=n.mulDownFixed(t[e],o);return l}function s(i,o,l,r){const d=i*BigInt(o.length);let u=o[0],c=o[0]*BigInt(o.length);for(let t=1;t<o.length;t++)c=n.divDown(n.mul(n.mul(c,o[t]),BigInt(o.length)),l),u+=o[t];u-=o[r];const g=n.mul(l,l),s=n.mul(n.mul(n.divUp(g,n.mul(d,c)),e),o[r]),m=u+n.mul(n.divDown(l,d),e);let x=t,F=n.divUp(g+s,l+m);for(let t=0;t<255;t++)if(x=F,F=n.divUp(n.mul(F,F)+s,n.mul(F,BigInt(2))+m-l),F>x){if(F-x<=1)return F}else if(x-F<=1)return F;throw new Error("Errors.STABLE_GET_BALANCE_DIDNT_CONVERGE")}function m(t,e,i,l,r,d){const u=n.complementFixed(d),c=[...e];e[i]=n.add(e[i],n.mulUpFixed(r,u)),e[l]=n.sub(e[l],o(t,c,i,l,r,d));let g=p(t,e,i,l,!0,!1);return g=n.divDownFixed(n.ONE,n.mulDownFixed(g,u)),g}function x(t,e,i,o,r,d){const u=l(t,[...e],i,o,r,d);e[i]=e[i]+u,e[o]=n.sub(e[o],r);let c=p(t,e,i,o,!0,!0);const g=n.complementFixed(d);return c=n.divUpFixed(n.ONE,n.mulUpFixed(c,g)),c}function F(t,e,i,o,l){e[i]=e[i]+l;const d=e.map(((n,t)=>t==i?l:BigInt(0)));let u=w(t,e,o+r(t,e,d,o,BigInt(0)),i);return u=n.divUpFixed(n.ONE,u),u}function f(t,e,i,o,l){const r=d(t,[...e],i,l,o,BigInt(0));e[i]=e[i]+r;let u=w(t,e,o+l,i);return u=n.divUpFixed(n.ONE,u),u}function I(t,e,i,o,l){const r=c(t,e,i,l,o,BigInt(0));e[i]=e[i]-r;return w(t,e,n.sub(o,l),i)}function B(t,e,i,o,l){e[i]=n.sub(e[i],l);const r=e.map(((n,t)=>t==i?l:BigInt(0)));return w(t,e,o-u(t,e,r,o,BigInt(0)),i)}function p(t,o,l,r,d,u){const c=o.length,g=i(t,o);let s=BigInt(0);for(let n=0;n<c;n++)n!=l&&n!=r&&(s+=o[n]);const m=o[l],x=o[r],F=t*BigInt(c),f=F*(s-g)+g*e,I=BigInt(2)*F*m*x,B=I+F*x*x+f*x,p=I+F*m*m+f*m;let w;if(d)w=n.divUpFixed(B,p);else{const t=BigInt(2)*F*x,e=BigInt(2)*F*m,i=t+e+f,o=BigInt(2)*B*p*i-t*p*p+e*B*B,l=B*B*p;w=n.divUpFixed(o,l),u&&(w=n.mulUpFixed(n.mulUpFixed(w,p),B))}return w}function w(t,o,l,r,d,u,c){const g=o.length,s=i(t,o);let m=BigInt(0),x=s/BigInt(g);for(let n=0;n<g;n++)n!=r&&(m+=o[n],x=x*s/(BigInt(g)*o[n]));const F=o[r],f=t*BigInt(g),I=f*m,B=BigInt(e)-f,p=BigInt(2)*f*F+I+B*s,w=x*BigInt(g+1)*e-B*F;return n.divUpFixed(p*l/w,s)}export{u as _calcBptInGivenExactTokensOut,r as _calcBptOutGivenExactTokensIn,l as _calcInGivenOut,o as _calcOutGivenIn,d as _calcTokenInGivenExactBptOut,c as _calcTokenOutGivenExactBptIn,g as _calcTokensOutGivenExactBptIn,p as _poolDerivatives,w as _poolDerivativesBPT,B as _spotPriceAfterSwapBPTInForExactTokenOut,I as _spotPriceAfterSwapExactBPTInForTokenOut,F as _spotPriceAfterSwapExactTokenInForBPTOut,m as _spotPriceAfterSwapExactTokenInForTokenOut,f as _spotPriceAfterSwapTokenInForExactBPTOut,x as _spotPriceAfterSwapTokenInForExactTokenOut};
//# sourceMappingURL=stableMathBigInt.js.map
