{"version":3,"file":"constants.js","sources":["../../../../../../src/pools/gyro3Pool/constants.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\n\n// POW3 constant\n// Threshold of x where the normal method of computing x^3 would overflow and we need a workaround.\n// Equal to 4.87e13 scaled; 4.87e13 is the point x where x**3 * 10**36 = (x**2 native) * (x native) ~ 2**256\nexport const _SAFE_LARGE_POW3_THRESHOLD = BigNumber.from(10).pow(29).mul(487);\nexport const MIDDECIMAL = BigNumber.from(10).pow(9); // splits the fixed point decimals into two equal parts.\n\n// Stopping criterion for the Newton iteration that computes the invariant:\n// - Stop if the step width doesn't shrink anymore by at least a factor _INVARIANT_SHRINKING_FACTOR_PER_STEP.\n// - ... but in any case, make at least _INVARIANT_MIN_ITERATIONS iterations. This is useful to compensate for a\n// less-than-ideal starting point, which is important when alpha is small.\nexport const _INVARIANT_SHRINKING_FACTOR_PER_STEP = 8;\nexport const _INVARIANT_MIN_ITERATIONS = 5;\n"],"names":["_SAFE_LARGE_POW3_THRESHOLD","BigNumber","from","pow","mul","MIDDECIMAL","_INVARIANT_SHRINKING_FACTOR_PER_STEP","_INVARIANT_MIN_ITERATIONS"],"mappings":"2DAKaA,EAA6BC,EAAUC,KAAK,IAAIC,IAAI,IAAIC,IAAI,KAC5DC,EAAaJ,EAAUC,KAAK,IAAIC,IAAI,GAMpCG,EAAuC,EACvCC,EAA4B"}